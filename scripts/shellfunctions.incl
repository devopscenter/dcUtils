func1Name=dcLog
func2Name=dcStartLog
func3Name=dcEndLog
func4Name=dcTrackEvent

# -----------------------------------------------------------------------------
read -r -d '' dcLogContent <<'EOF'
    msg=${1}
    state=${2}

    scriptName=$(basename -- "$0")
    TIMESTAMP=$(date +%F_%T)

    if [[ ! -z "${state}" ]]; then
        echo "[${TIMESTAMP}]:${scriptName}:${state}:${msg}"
    else
        echo "[${TIMESTAMP}]:${scriptName}:${FUNCNAME[1]}:${msg}"
    fi
EOF
dcLogDef="$func1Name(){ "${dcLogContent}"; }"
# -----------------------------------------------------------------------------


# -----------------------------------------------------------------------------
read -r -d '' dcStartLogContent <<'EOF'
    msg=${1}
    dcLog "${msg}" "START" 
EOF
dcStartLogDef="$func2Name(){ "${dcStartLogContent}"; }"
# -----------------------------------------------------------------------------


# -----------------------------------------------------------------------------
read -r -d '' dcEndLogContent <<'EOF'
    msg=${1}
    dcLog "${msg}" "END" 
EOF
dcEndLogDef="$func3Name(){ "${dcEndLogContent}"; }"
# -----------------------------------------------------------------------------


# -----------------------------------------------------------------------------
read -r -d '' dcTrackEventContent <<'EOF'
	GOOGLE_DIR=$(cd $HOME/Googl*;pwd)
    CUSTOMER_NAME=${1}
    CUSTOMER_APP_NAME=${2}
    EVENT=${3}
    MSG=${4}
    TRACKING_FILE="${GOOGLE_DIR}/devops.center/monitoring/dcEventTracking.txt"

    if [[ ! -f ${TRACKING_FILE} ]]; then
        dcLog "ERROR: $TRACKING_FILE not found, the event will not be written"
    else
        TIMESTAMP=$(date +%F_%T)
        JSONTOWRITE="{\"date\": \"${TIMESTAMP}\", \"customer\": \"${CUSTOMER_NAME}\", \"instancename\": \"${CUSTOMER_APP_NAME}\", \"event\": \"${EVENT}\", \"msg\": \"${MSG}\"} "
        echo "${JSONTOWRITE}" >> "${TRACKING_FILE}"
    fi
EOF
dcTrackEventDef="$func4Name(){ "${dcTrackEventContent}"; }"
# -----------------------------------------------------------------------------

# function definitons need a semicolon between them but not at the end    
functionDefs="${dcLogDef} ; ${dcStartLogDef} ; ${dcEndLogDef} ; ${dcTrackEventDef} "

# function names need a space between them
functionNames="${func1Name} ${func2Name} ${func3Name} ${func4Name}"

eval "${functionDefs} ; export -f ${functionNames} "
